赋值顺序
1.直接赋值
2.定义变量后赋值
3.构造器赋值
构造器在字节码文件中为init()方法 构造器默认有空参放法 若自己定义构造器则以自己的定义的为准
构造器可以overload
private修饰的好处  可以不让用户直接调用属性 例如当用户新建一个对象时，以构造器的方法默认初始化了对象的属性后
只提供get方法，那么用户只能获取对象的第一次赋值的属性，不可以通过set方法进行修改，例如身份证就是默认的，
在第一次赋值之后就不允许修改。
//方法参数
init(int .... sno) 这种形式的方法就是可变参数 未指定参数个数
可以init(int ... sno,int i);但不可int(int i,int ... sno)这样编译器就搞不清楚输入的参数了
//值传递机制
若传递的是基本数据类型，则直接传值
若是引用数据类型 如类，则传递对象的地址值
java内存机制

方法都存在堆中
例如main方法 先压入栈中 若main中还有方法则继续压入 栈的执行原则是先进后出，例如main方法中有个setName方法
当main方法压入栈后 setName也跟着压入
此外new对象时 对象也存在栈中 而属性则存在堆中 栈中的对象的值是堆中属性的地址值
java不允许直接修改内存值
